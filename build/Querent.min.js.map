{"version":3,"file":"Querent.min.js","sources":["../src/Querent.js"],"sourcesContent":["Object.entries = x =>\n  Object.keys(x).reduce((y, z) =>\n    y.push([z, x[z]]) && y, [])\n\nconst query = (objects, query) =>\n  objects.filter((object) => matches(object, query))\n\nconst matches = (object, query) =>\n  every(query, (key, value) =>\n    evaluate(object[key], value))\n\nconst every = (object, iteratee) =>\n  Object.entries(object).every(([key, value]) => iteratee(key, value))\n\nconst evaluate = (prop, value) => {\n  if (Array.isArray(value))\n    return value.includes(prop)\n\n  if (value instanceof Object)\n    return every(value, (key, value) => predicate(prop, key, value))\n\n  return value === prop\n}\n\nconst predicate = (prop, key, value) => {\n  switch (key) {\n    case '!': return !evaluate(prop, value)\n    case '<': return prop < value\n    case '<=': return prop <= value\n    case '>': return prop > value\n    case '>=': return prop >= value\n    default: return evaluate(prop[key], value)\n  }\n}\n\nconst Querent = {\n  query,\n  matches,\n  every,\n  evaluate,\n  predicate,\n}\n\nexport default Querent\n"],"names":["Object","entries","keys","x","reduce","y","z","push","matches","object","query","every","key","value","evaluate","iteratee","prop","Array","isArray","includes","predicate","objects","filter"],"mappings":"6lBAAAA,OAAOC,QAAU,mBACfD,OAAOE,KAAKC,GAAGC,OAAO,SAACC,EAAGC,UACxBD,EAAEE,MAAMD,EAAGH,EAAEG,MAAQD,QAEzB,IAGMG,EAAU,SAACC,EAAQC,UACvBC,EAAMD,EAAO,SAACE,EAAKC,UACjBC,EAASL,EAAOG,GAAMC,MAEpBF,EAAQ,SAACF,EAAQM,UACrBf,OAAOC,QAAQQ,GAAQE,MAAM,yBAAEC,OAAKC,cAAWE,EAASH,EAAKC,MAEzDC,EAAW,SAACE,EAAMH,UAClBI,MAAMC,QAAQL,GACTA,EAAMM,SAASH,GAEpBH,aAAiBb,OACZW,EAAME,EAAO,SAACD,EAAKC,UAAUO,EAAUJ,EAAMJ,EAAKC,KAEpDA,IAAUG,GAGbI,EAAY,SAACJ,EAAMJ,EAAKC,UACpBD,OACD,WAAaE,EAASE,EAAMH,OAC5B,WAAYG,EAAOH,MACnB,YAAaG,GAAQH,MACrB,WAAYG,EAAOH,MACnB,YAAaG,GAAQH,iBACVC,EAASE,EAAKJ,GAAMC,kBA3B1B,SAACQ,EAASX,UACtBW,EAAQC,OAAO,SAACb,UAAWD,EAAQC,EAAQC"}